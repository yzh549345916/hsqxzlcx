
@{
    ViewBag.Title = "入库信息折线图查询";
}

@using TelerikMvcApp3.Models
    <div class="placeholders">
        <div class="row d-flex justify-content-start" style="margin-top: 2em;">
            <div class="col-2">
            </div>
            <div class="col-2 text-center align-content-center">
                <p>开始日期</p>
                <p>
                    @(Html.Kendo().DateTimePicker()
                                   .Name("startc2")
                                   .Value(DateTime.Today.AddDays(-3))
                                   .Max(DateTime.Today.AddDays(1))
                                   .ParseFormats(new[] { "yyyy年MM月dd日HH时" })
                                   .Events(e => e.Change("startChangec2"))
                                 .WeekNumber(true)
                                   .HtmlAttributes(new { style = "width:100%;" }))
                    </ p >
            </div>
            <div class="col-2 text-center">
                <p>结束日期</p>
                <p>
                    @(Html.Kendo().DateTimePicker()
                                   .Name("endc2")
                                 .WeekNumber(true)
                                   .Value(DateTime.Now).ParseFormats(new[] { "yyyy年MM月dd日HH时" })
                                   .Events(e => e.Change("endChangec2"))
                                   .HtmlAttributes(new { style = "width:100%;" })
                    )
                </p>
            </div>
            <div class="col-3 text-center">
                <p>资料种类</p>
                <p>
                    @(Html.Kendo().MultiSelect()
          .Name("selectsc2")
          .TagMode(TagMode.Multiple)
          .DataTextField("表名称").DataValueField("数据库表名称")
          .Placeholder("请选择待查询数据种类")
          .DataSource(source => source
              .Custom()
              .Transport(transport => transport
                .Read(read =>
                {
                    read.Action("GetCustomers", "RKTJ").Data("onAdditionalDatac2");
                }))
              .ServerFiltering(false))
                        .AutoClose(false)
                    )
                </p>


            </div>
            <div class="col-1">

                <p style=" position:absolute;bottom:0;">
                    @(Html.Kendo().Button()
                                 .Name("cxButtonc2")
                                 .Content("查询")
                                 .Icon("search").HtmlAttributes(new { @class = "textButton k-primary" })
                        .Events(ev => ev.Click("cxClickc2")))
                </p>
            </div>

        </div>
        <div class="row" style="margin-top: 2em;">
            <div class="col-2">
            </div>
            <div class="box-col">
                @Html.Kendo().Button().Content("导出pdf").Name("export-pdf").Events(ev => ev.Click("char2pdfDC"))
            </div>
            <div class="box-col">
                @Html.Kendo().Button().Content("导出SVG").Name("export-svgc2").Events(ev => ev.Click("exportsvgClickc"))
            </div>
            <div class="box-col" style="margin-left:1px">
                @Html.Kendo().Button().Content("导出PNG").Name("export-pngc2").Events(ev => ev.Click("exportpngClickc"))
            </div>
            <ul class="options" id="optionsc2" style="display:flex;list-style:none;margin-top:0.1em">
                <li style="margin-left:1em">
                    <input id="typeColumn" name="seriesType"
                           type="radio" value="column" autocomplete="off" />
                    <label for="typeColumn">柱状图</label>
                </li>
                <li style="margin-left:1em">
                    <input id="typeLine" name="seriesType"
                           type="radio" value="line" checked="checked" autocomplete="off" />
                    <label for="typeLine">折线图</label>
                </li>
                <li style="margin-left:1em">
                    <input id="typeArea" name="seriesType"
                           type="radio" value="area" autocomplete="off" />
                    <label for="typeArea">面积图</label>
                </li>
                <li style="margin-left:1em">
                    <input id="stack" type="checkbox" autocomplete="off" />
                    <label for="stack">堆叠显示</label>
                </li>
            </ul>

        </div>
        <div class="row ">
            <div class="col-1">

            </div>

            <div class="col-10">
                @(Html.Kendo().StockChart <SKViewModel>()
    .Name("c2")
    .DateField("时间")
    .Title(tit => tit.Text("入库统计信息查询"))
    .DataSource(dataSource => dataSource
    .Read(read => read.Action("Orders_Read4", "RKTJ").Data("additionalDatac2"))
    .Group(group => group.Add(model => model.名称))
    .Sort(sort => sort.Add(model => model.时间).Ascending())

    ).Series(series =>
    {
        series.Line(model => model.统计个数).Name("#= group.value #").CategoryField("时间").Aggregate(ChartSeriesAggregate.Sum);
    })
    .CategoryAxis(axis => axis.Date().Title("时间").Labels(labels => labels.Format("dd日\nHH时").Step(1))
        
    //.MaxDateGroups(20)
    //.BaseUnitStep(0)
    )
    .Legend(legend => legend.Position(ChartLegendPosition.Left))
    .ChartArea(chartArea => chartArea
    .Background("transparent")
    ).Pdf(pdf => pdf.FileName("pdf导出.pdf").ProxyURL(Url.Action("Export_Save", "RKTJ")))
    .SeriesDefaults(seriesDefaults =>seriesDefaults.Line().Style(ChartLineStyle.Smooth))
    .ValueAxis(axis => axis.Numeric().Labels(labels => labels.Format("{0}个"))
    .Title("个数")
    .Line(line => line.Visible(false)))
    .Tooltip(tooltip => tooltip
    .Visible(true)
    .Shared(true)
    .Opacity(0.8).Template("#=kendo.format('{0:MM月dd日HH时}',category)#：#=value#个")
    ).Navigator(nav => nav
    .Series(series =>
    {
        series.Line(s => s.统计个数);
    })
        .Hint(hint=>hint.Format("{0:MM月dd日HH时}-{1:MM月dd日HH时}"))
    .Select(
    DateTime.Now.AddHours(-30),
    DateTime.Now
    ).CategoryAxis(ca=> {
        ca.Axis.BaseUnit = ChartAxisBaseUnit.Hours;
        ca.Axis.Labels.Format="dd日HH时";
    })
    )
    //        .Pannable(pn => pn.Lock(ChartAxisLock.Y))
    //.Zoomable(zb => zb.Mousewheel(sl => sl.Lock(ChartAxisLock.Y)).Selection(se => se.Lock(ChartAxisLock.Y)))
    )
</div>
        </div>
        <script>
            $(document).ready(function () {
                $("#optionsc2").bind("change", refreshc2);
			});
        </script>
    </div>

    <style>
        #c2 {
            height: 600px;
        }
    </style>